# .github/workflows/test.yaml

name: test
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["build"]
    types:
      - completed
    branches:
      - main
      - 'release/**'

jobs:
  test:
    # Only run if the build workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        api-level: [26, 29, 30, 35]
    steps:
      - uses: actions/checkout@v4
        with: { submodules: recursive, fetch-depth: 0 }

      - name: Set up Temurin 17 (default JDK)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - uses: gradle/actions/setup-gradle@v4
      - uses: android-actions/setup-android@v3

      # Enable KVM for better emulator performance
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      # Download the build artifacts if triggered by workflow_run
      - name: Download build outputs
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: stoic-release-tar-gz
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      # Unpack if we downloaded artifacts
      - name: Unpack build artifacts
        if: github.event_name == 'workflow_run'
        run: |
          mkdir -p build/distributions
          tar -C build/distributions -xzf stoic-release.tar.gz

      # Build if manually triggered (workflow_dispatch)
      - name: Build (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          ./build.sh --yes

      - name: Run tests on Android emulator (API ${{ matrix.api-level }})
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          target: default
          disable-animations: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          script: |
            set -eu
            adb wait-for-device
            adb shell 'while [ -z "$(getprop sys.boot_completed)" ]; do sleep 1; done'
            echo "Emulator is ready"

            export PATH="$PWD/build/distributions/bin/jvm:$PATH"

            # Run all tests
            test/run-all-tests-on-connected-device.sh
